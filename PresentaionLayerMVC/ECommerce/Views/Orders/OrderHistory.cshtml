@model IEnumerable<DomainLayerCore.Models.UserOrderHeader>

@{
    ViewData["Title"] = "OrderHistory";
    var Status = Context.Request.Query["status"];
    var Pending ="text-primary";
    var Inprocess = "text-primary";
    var Shipped = "text-primary";
    var Completed = "text-primary";
    var Canceled = "text-primary";
    var All = "text-primary";
    switch (Status)
    {
        case "Pending":
            Pending = "active text-white bg-secondary";
            break;
        case "Inprocess":
            Inprocess = "active text-white bg-secondary"; 
            break;
        case "Completed":
            Completed = "active text-white bg-secondary";
            break;
        case "Canceled":
            Canceled = "active text-white bg-secondary";
            break;
        case "Shipped":
            Shipped = "active text-white bg-secondary";
            break;
        default:
            All = "active text-white bg-secondary";
            break;
    }
}
<div class="d-flex justify-content-end pb-3 pt-2">
    <ul class="list-group list-group-horizontal-sm shadow">
        <li class="list-group-item @Pending">
            <a style="text-decoration:none;" asp-controller="Orders" asp-action="OrderHistory" asp-route-status="Pending">Pending Orders</a>
        </li>
        <li class="list-group-item @Inprocess">
            <a style="text-decoration:none;" asp-controller="Orders" asp-action="OrderHistory" asp-route-status="Inprocess">In Process</a>
        </li>
        <li class="list-group-item @Shipped">
            <a style="text-decoration:none;" asp-controller="Orders" asp-action="OrderHistory" asp-route-status="Shipped">Shipped</a>
        </li>
        <li class="list-group-item @Completed">
            <a style="text-decoration:none;" asp-controller="Orders" asp-action="OrderHistory" asp-route-status="Completed">Completed</a>
        </li>
        <li class="list-group-item @Canceled">
            <a style="text-decoration:none;" asp-controller="Orders" asp-action="OrderHistory" asp-route-status="Canceled">Canceled</a>
        </li>
        <li class="list-group-item @All">
            <a style="text-decoration:none;" asp-controller="Orders" asp-action="OrderHistory" >All</a>
        </li>
    </ul>
</div>
@if (Model.Count() > 0)
{
    <table class="table table-striped table-bordered table-dark p-4 text-center shadow">
        <thead class="table-danger">
            <tr>
                <th>Received Date</th>
                <th>Name</th>
                <th>Total Price</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.DateOfOrder.ToShortDateString()</td>
                    <td>@item.Name</td>
                    <td>$@item.TotalOrderAmount</td>
                    <td>@item.OrderStatus</td>
                    <td>
                        <a asp-action="OrderDescription" asp-controller="Orders" asp-route-id="@item.Id" class="btn btn-primary">View Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h1 class="text-info">No @Status order is available</h1>
}


@* <h1>OrderHistory</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DateOfOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalOrderAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentMethod)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                $@Html.DisplayFor(modelItem => item.TotalOrderAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentMethod)
            </td>
        </tr>
}
    </tbody>
</table> *@
